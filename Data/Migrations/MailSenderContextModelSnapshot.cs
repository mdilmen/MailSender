// <auto-generated />
using System;
using MailSender.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MailSender.Data.Migrations
{
    [DbContext(typeof(MailSenderContext))]
    partial class MailSenderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("MailSender.Data.Entities.AgeRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AgeRangeOrder")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("From")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("To")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AgeRanges");
                });

            modelBuilder.Entity("MailSender.Data.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CityOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("MailSender.Data.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("MailSender.Data.Entities.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int?>("SurveyUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SurveyUserId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("MailSender.Data.Entities.Premium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AgeRangeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("PremiumLimitType")
                        .HasColumnType("int");

                    b.Property<int>("PremiumType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgeRangeId");

                    b.HasIndex("CityId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Premiums");
                });

            modelBuilder.Entity("MailSender.Data.Entities.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Child_1_BirthDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_1_City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_1_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_1_PremiumAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_1_PremiumCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_1_PremiumLimitType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_1_PremiumType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_1_TCNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_2_BirthDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_2_City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_2_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_2_PremiumAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_2_PremiumCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_2_PremiumLimitType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_2_PremiumType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_2_TCNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_3_BirthDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_3_City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_3_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_3_PremiumAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_3_PremiumCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_3_PremiumLimitType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_3_PremiumType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_3_TCNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_4_BirthDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_4_City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_4_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_4_PremiumAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_4_PremiumCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_4_PremiumLimitType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_4_PremiumType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Child_4_TCNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberBirthDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberPremiumAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberPremiumCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberPremiumLimitType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberPremiumType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberTCNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberWorkType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PremiumCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PremiumTotalAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseBirthDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpousePremiumAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpousePremiumCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpousePremiumLimitType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpousePremiumType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseTCNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseWorkType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("MailSender.Data.Entities.SubUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PremiumId")
                        .HasColumnType("int");

                    b.Property<int>("SubUserOrder")
                        .HasColumnType("int");

                    b.Property<int?>("SurveyUserId")
                        .HasColumnType("int");

                    b.Property<string>("TCNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<int>("WorkType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("PremiumId");

                    b.HasIndex("SurveyUserId");

                    b.ToTable("SubUsers");
                });

            modelBuilder.Entity("MailSender.Data.Entities.SurveyUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PremiumId")
                        .HasColumnType("int");

                    b.Property<string>("TCNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("PremiumId");

                    b.ToTable("SurveyUsers");
                });

            modelBuilder.Entity("MailSender.Data.Entities.Contract", b =>
                {
                    b.HasOne("MailSender.Data.Entities.SurveyUser", "SurveyUser")
                        .WithMany()
                        .HasForeignKey("SurveyUserId");

                    b.Navigation("SurveyUser");
                });

            modelBuilder.Entity("MailSender.Data.Entities.Premium", b =>
                {
                    b.HasOne("MailSender.Data.Entities.AgeRange", "AgeRange")
                        .WithMany()
                        .HasForeignKey("AgeRangeId");

                    b.HasOne("MailSender.Data.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("MailSender.Data.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("AgeRange");

                    b.Navigation("City");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("MailSender.Data.Entities.SubUser", b =>
                {
                    b.HasOne("MailSender.Data.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("MailSender.Data.Entities.Premium", "Premium")
                        .WithMany()
                        .HasForeignKey("PremiumId");

                    b.HasOne("MailSender.Data.Entities.SurveyUser", "SurveyUser")
                        .WithMany("SubUsers")
                        .HasForeignKey("SurveyUserId");

                    b.Navigation("City");

                    b.Navigation("Premium");

                    b.Navigation("SurveyUser");
                });

            modelBuilder.Entity("MailSender.Data.Entities.SurveyUser", b =>
                {
                    b.HasOne("MailSender.Data.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("MailSender.Data.Entities.Premium", "Premium")
                        .WithMany()
                        .HasForeignKey("PremiumId");

                    b.Navigation("City");

                    b.Navigation("Premium");
                });

            modelBuilder.Entity("MailSender.Data.Entities.SurveyUser", b =>
                {
                    b.Navigation("SubUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
